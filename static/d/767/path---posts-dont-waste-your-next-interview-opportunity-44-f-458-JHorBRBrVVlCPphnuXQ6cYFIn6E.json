{"data":{"site":{"siteMetadata":{"title":"Snorting Code, Et al.","subtitle":"I don't take myself too seriously!","copyright":"© All rights reserved.","author":{"name":"Prasoon","twitter":"prasoonj"},"disqusShortname":"","url":"https://prasoonj.github.io/snortingcode"}},"markdownRemark":{"id":"fd133f81-19ec-5390-9d95-fbe05538c287","html":"<p>My organization is in a hiring overdrive these days. Each day some 10 candidates are interviewed or asked to write few lines of code as part of the elimination round. What that means for us is additional task of finding the people we want to work with along with regular work towards our deliverables!Though I’ve taken interviews in my previous organization, the sheer volume of candidates that I’m getting to meet now is a big learning experience. Sadly, all those who told you that very few people in the tech industry are employable were spot on about the state of affairs.As someone who’s ruined more than countable number of interviews for myself, I think I can give you a few things to think about before you suit-up for your next interview (please don’t wear a suit for a technical interview - on a completely unrelated, well almost, tangent read this!)#1. Run through the things you’ve done beforeI know, you want the interviewer to know that you know because you’ve done it in the past. But, truth be told, we don’t know. Unless there is something substantial that you can show us, we are not in a position to believe what you say - well, not always. So, always expect questions about the things that you say you’ve done. A good interviewer would know the right things to ask but, a lot of times, if the interviewer has not had experience with that particular technology, tool, etc. your failing to give prompt answers might lead her to think that you are hunting in the dark for answers.#2. Translate things at a fundamental levelWhatever your experience level, in a technical interview, no one is looking for your ability to spit ‘keywords’! It does sound harsh but, I’ve seen so many candidates throwing keywords and expecting to score well in a technical interview. If the interviewer asks you to showcase a good object oriented, scalable design for an ATC system and gives you enough time to solve the problem, don’t talk in terms of ‘black-boxes’ of functionality alone. Write down a few interfaces, demonstrate how the entities are related, possibly write pseudo code for a module that you think would require some complex treatment. If the interviewer does not want you to go into such detail, she would guide you to abstract certain layers. Don’t make that assumption yourself.#3. No one has all the time in the world for youTake your time to settle down, drink water, visit the facilities and be at comfort. But, when it comes down to business, don’t beat around the bush. There are just 3 ways to answer a question - Give the right answer if you know it.Politely say that you don’t know the answer to the question.Say that you would keep it at the back of your head and provide the answer in case you are able to hit the nail in the head (again ask the interviewer if that’s fine).Talk about your best projects, favorite technologies, things you know best, your biggest tech-turn-ons first! If you think you are a nodejs ninja make sure you talk about it as soon as possible even if you are interviewing for a Java position (of course, don’t not talk about the technologies needed for the position you are applying for!)#4. Show the code!You are the code you write! (One of the best ways to evaluate those ‘self-improvement’ new year resolutions is to try and refactor the code that you wrote last year). If you have a public code repository, make sure that the interviewer has a look at it - insist that they do! It does not have to be contribution to the kernel that powers up Ex Machina, even the most humble library that you wrote would make a big difference. It goes to show that you are really passionate about technology, that when you go home after work, apart from playing with your dog, kids and wife (maybe, not in that order), you like to learn something new. Show them your github account, tech blog (could be as lousy as this one!), a project you did during vacations, anything that gives them an idea about you as a technology person.#5. Think aloud. Ask questions.I think most companies are steering clear of those (unproductive) puzzles - though, Don Knuth has a slightly different opinion about why puzzles are important for a computer scientist. But, even a simple question might involve something that you have not taken into account. Some simple aspect that you might have missed. For anything but a straight forward boolean-answer questions, practice to think aloud without sounding creepy - a few sessions with some close friends might be of help?If you have missed some important detail in your understanding of the question, the interviewer might fill you in on that or provide some clues to approach it better. Also, it helps for the interviewer to know how the candidate approaches the problem. That’s what you are being hired for after all - solving problems!</p>","fields":{"tagSlugs":["/tags/technology/","/tags/interview/","/tags/jobsearch/","/tags/bangalore/","/tags/it/"]},"frontmatter":{"title":"Don’t Waste Your Next Interview Opportunity!","tags":["technology","interview","jobsearch","bangalore","it"],"date":"2015-07-17T09:54:44+05:30","description":null}}},"pageContext":{"slug":"/posts/dont-waste-your-next-interview-opportunity"}}